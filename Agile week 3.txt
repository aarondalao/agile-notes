Building a product backlog
Product Backlog
    - The single authoritative source of things that a team works on. It contains all of the features,
    requirements, and activities associalted with deliverables to achieve the goal of the project.

key features
1) living artifact
2) Owned and adjusted by the Product owner
3) prioritized list of features

creating a product backlog best practices:
* Description - describes the item. need to be as clear as possible
* the value - tells the business how much is the business value of 
    the item delivers to the customers, to the team, or to the users
* the order - the order should always be prioritized. stacked rank, ordering the most
    important task to least important tasks
* the estimate - how much the scrum team thinks an iteam will take to complete

The Product Goal
- is the long-term objective for the Scrum Team, and it is included in the Product Backlog. 
- The rest of the Product Backlog defines what tasks will fulfill the Product Goal.

====================================================================================================

Writing and Elements of user stories and Epics

User stories 
    - short, simple descriptions of a deliverable told from the perspective of the user.
    - creating user stories helps the team develop a solution that is always centered around the user's
    needs and overall experience.
    - driving factor of every Scrum project is putting the customer first.
    - a key component of ensuring that customers are satisfied with the product.
    - provides insights into what goals the user wants to achieve, enables collaboration, inspires 
    creative solutions, and create momentum by giing the tam a small win when the stories are developed.

Elements when writing user stories:
    * User persona - what is your user like> what is their relation to the project? what goes do they have?
    * Definition of done - this referes to ann agreen upon set of items that must be completed before a user 
    story can be considered complete.
    * Tasks - What are the key activities needed to complete the user story?
    * Any feedback already provided -  If you are adding features to an existing product and you have already 
    received feedback form customers on a past iteration, make sure to consider this feedback.

I.N.V.E.S.T

Idependent: The story's completion is not dependent on another story.
Negotiable: there is room for discussion about this iteam.
valuable: Completeing the user story has to deviver value.
Estimable: The definition of Done must be clear so that the team can give each user story an estimate.
Testable: A test can be conducted to check that it meets the criteria.

template for user story looks like: 
As a <user role>, I want this <action> so that I can get this <value>

Acceptance criteria
    - which is essentially the checklist you will use to decide whether the user story is done.

Epics
    - a collection of user stories. a very large user stories that are there to help organize the project.
    - its purposed is to help manage related user stories.

Key takeaways
Epics allow you to keep track of large, loosely-defined ideas, while user stories are much smaller unit of work,
insipered directlky from the end user or customer. Both user stories and epics help teams ensure they are deliverying 
value to hte customer.

=================================================================================================

Backlog refinement and effor estimation

backlog refinement  
    - act of keeping the backlog described, estimated, and prioritized so that the scrum team can operate effective

Review the Product Backlog to ensure 
* it contains the appropriate items, and that nothing new is needed or nothing needs to be removed
* that the iteams are prioritized by the product ownder, this is also called settings the order field.
* that the iteams at the top tof the backlog are ready for delivery with clear acceptance criteria.
* and that backlog iteams include estimates or an informed assessment about how much work of a particular 
backlog will be.

estimates
    - crucial in backlog refinement.
    - adding estimates to backlog iteams to inform our planning practices about how much effort it will be to finish
    each time or user story.
    - we can find out how much work we have ahead of us through estimation.

Absolute estimation vs Relative estimation

Absolute estimation
    - time and effort estimation in traditional project management.

relative estimation
    - instead of trying to deterime exactly how long a task will take, will compare the effort of that task, to the effort of another task
    and that becomse the estimate.
    - this estimation is not done in tradution units of hours,days, or weeks, instead we assign each backlog iteam of value that is 
    relative unit or size.

Common relative estimation methods:
Tshirt sizes
    - take one task and identify its effort. then compare that task to another task and gauge how much effort it will take 
    relative to the first identified task.
    - for example, imagine theres a basket of mangoes in front of you and you need to sort them out by placing it in a  small,
     medium and large basket. get one mango and identify its size and put it in its respective basket based on its size. get another mango and compare 
    its size to the first mango you took. 
    - to compare the effort esitamted for completeing a backlog item to the effort estimated for another backlog item.


story points
    - more advanced that tshirt sizes, but the concept is same.
    - get one task and make it as an anchor point to compare and estmate it to other tasks. 
    - uses a mathematical sequestnce of numbers called fibonacci sequence. this is helpfull because as the estimate gets higher,
    the uncertainty and risk also gets higher. this number combines both effort adn risk into one number.

best practices for tshirt sizes and story points
* asking the product owner questions about the user story or item to ensure that there is enough information to estimate it.
* discussing divergetnt estimates from various team members so that everyont has a change to understood how to implement the item.
* Agreeing on the final T-shirt sizes or story points and capturing it int the system
* If certain items fall into larger t shirt size or story points value range, discussing whether it makes sense to break them down into smaller
 pieces before moving on.

 Agile effort estimation techniques

 examples:
    * Planning Poker
        - well knows and commnoy used whe Scrum Teams have to make effor estamtes for small number of items.
        - consensus-based, meaning everyone has to aggreee on the numebr chosen.
        - uses fibonacci sequence of deck of cards 
        - sometimes plannign poker also includes cards with coffee cups and question marks. Question mark card mean that the person doesnot understand
         what its being discussed or doesnt have enought infomration to draw a conclusion. Coffee Cup card means that the person needs a break.
         - its a strategy used in  Sprint Planning Meetings. as each Product backlog item/ user story is discussed each team member lays a card face 
         down on the table. then, evenry turns their card over at the ssame time and htat team discusses the estimates, particularly where they are far 
         apart from one another. By first hiding the estimates, the groups abouts any bias that is presented when numnbers are said aloud. Sometimes, when
         hearing number sa aloud, people react to that estimate or the estimateor themselves, and it changes what theight initial though may have been.

    * Dot Voting
        - good for sprints with a ow number of sprint backlog items, just like Planning Poker
        - each team members starts with small dot stickers, color-coded by the estimated effort required. THe items or user stories are written out on 
        piece of paper placed around a table or put uyp on hte wall. then, the team members walk around the table and add their color coded stickers
        to the team

    * The Bucket System
        - helpful for backlogs with many items since it can be done very quickly. 
        - effective strategy for sizing items as it explores each item in terms of pre-determined "buckets" of complexity
        - this buckets are metaphorical, does not require actual buckets, and maybe instead uses sticky notes or note cards, as buckets.
        - steps:
            - team starts by setting up a line of note cards donw the center of the table. each marked with a number representing a level of effort.
            - team writes each item or user story on a card. Each person draws and reads random item, then places somewhere along the line of numbered
             note cards.
            - no need to discuss further with the team.
            - if a person draws an item that they do not understand, then they can offer it to someone else to place.
            - of a person finds an item that they think does not fit where it was placed, they can discuss it with the team until a concensus about
            a more accurate placement is reached. Team members should spend no more than 120 seconds on each item

    * Large/uncertain/small
        - another quick method of rough estimation. great for product backlogs with several similar or comparable items.
        - same concept of the bucket system, but with a constraint of using only 3 buckets or categories, large, uncertain, and small
        - start with the simpler, more obvious user stories, the team places the items in one of the categories. Then, the team
        discusses and placed more complex iteam until each is assigned to a category.

    * Ordering methods
        - ideal for projects with smaller team and a large number of product backlog items.
        - steps: 
            - a scale is prepared and items are randomly placed ranging from low to high.
            - one at a time, each team member either moves any items one spot lower or higher on the scale or passes their turn.
            - this continues on until team members no longer want to move any items.

    * affinity Mapping   
        - usefull for team that have more than 20 items in their product backlog.
        - best practice it sto conduct this technique usng sticky notes placed onto a wall, whiteboard, or table. 
        - each sticky note features a different user story or item. Using sticky notes allow the team to move user stories around in order
         to group them by similar theme, group, and pattern. 
        - steps: 
            - teams place oon sticky note on the board
            - then , teams takes the next sticky note and discusses whether it is similar to the first item,
            - based on the teams assessment, the second sticky note is placed in the first group or into its own.
            - after all the items are grouped (there should be anywhere from 3-10 groups total), the team gives a name to each group that represents
             the general theme of the items, Them, the groups are prioritized by importance so that the team knows which items to tackle first.

Characteristics of effective estimation

* avoids gather false precistion of estimates.
    - assigning rough estimates results in more accuracy across the project. Therefore, if the team focuses on identifying relative estimates - rather
    than a team having a lengthy devate about whether a taks will take seven or 10 days of work - the team saves time and avoids potentially missing deadlines.
* Avoids anchoring bias
    - many of this techniques keep the initial estimate private, which allows team members to form an independent opinion on the estimate before sharing their
    thoughts with the team. This prevents a know phenomenon called anchoring bias, where individuals find themselves compelled to put forth estimates similar 
    to others in the room to avoid embarassement.
* promotes inclusivity
    - These group estimation techniques not only lead to better estimates byt also help the team develop trust and cohesiveness
* leads to effort discovery
    - Estimating in these dynamic ways can help the team uncover stategies to get items compelted which might otherwise not have been revealed.
